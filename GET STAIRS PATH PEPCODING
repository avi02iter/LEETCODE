import java.io.*;      //for explanation plz see copy and pepcoding video
import java.util.*;

public class Main {

    public static void main(String[] args) throws Exception {
        Scanner sc=new Scanner(System.in);
        int n=sc.nextInt();
        ArrayList<String> li=getStairPaths(n);
        System.out.println(li);
    }
//main code
    public static ArrayList<String> getStairPaths(int n) {
        ArrayList<String> b=new ArrayList<>();
        if(n==0){
            b.add("");
            return b;
        }else if(n<0){
            return b;
        }
        
        ArrayList<String> p1=getStairPaths(n-1);         //1 step chalega aur 1 se ssare answer nikal dega
         ArrayList<String> p2=getStairPaths(n-2);
          ArrayList<String> p3=getStairPaths(n-3);
          ArrayList<String> li=new ArrayList<>();
          
          for(String s1:p1){
              li.add(1+s1);
          }
          for(String s2:p2){
              li.add(2+s2);
          }
          for(String s3:p3){
              li.add(3+s3);
          }
          
          return li;
    }

}

//so above code generate tle becoz of pure recursion so we have to do it with dp
//code
class Solution {
    public int uniquePaths(int m, int n) {
        int dp[][]=new int[m+1][n+1];
        for(int i=0;i<m;i++){
            for(int j=0;j<n;j++){
                if(i==0||j==0){
                     dp[i][j]=1;
                }else{
                dp[i][j]=dp[i-1][j]+dp[i][j-1];
            }
            }
        }
        return dp[m-1][n-1];
    }
}
