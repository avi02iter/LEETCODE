public class Main {

    public static void main(String[] args) throws Exception {
        Scanner sc=new Scanner(System.in);
        int n=sc.nextInt();
        int row=sc.nextInt();
        int col=sc.nextInt();
        int[][] chess=new int[n][n];
        printKnightsTour(chess,row,col,1);
        
        
    }

    public static void printKnightsTour(int[][] chess, int r, int c, int move) {
        if(r<0||c<0||r>=chess.length||c>=chess.length||chess[r][c]>0){
            return;
        }else if(move==chess.length*chess.length){  //this block is written becoxz the last 25th moe can;t be written in the grid so to write it i make another call
             chess[r][c]=move;  //here 25 is store
            displayBoard(chess);  //display
            chess[r][c]=0;     //and then remove the 25
            return;
        }
        
       
        
        chess[r][c]=move;
        printKnightsTour(chess,r-2,c+1,move+1);             //order of this call matters
         printKnightsTour(chess,r-1,c+2,move+1);
          printKnightsTour(chess,r+1,c+2,move+1);
           printKnightsTour(chess,r+2,c+1,move+1);
            printKnightsTour(chess,r+2,c-1,move+1);
             printKnightsTour(chess,r+1,c-2,move+1);
              printKnightsTour(chess,r-1,c-2,move+1);
               printKnightsTour(chess,r-2,c-1,move+1);
               chess[r][c]=0;
        
        
    }

    public static void displayBoard(int[][] chess){
        for(int i = 0; i < chess.length; i++){
            for(int j = 0; j < chess[0].length; j++){
                System.out.print(chess[i][j] + " ");
            }
            System.out.println();
        }

        System.out.println();
    }
}
