Given a 0-indexed integer array nums of size n, find the maximum difference between nums[i] and nums[j] (i.e., nums[j] - nums[i]), such that 0 <= i < j < n and nums[i] < nums[j].

Return the maximum difference. If no such i and j exists, return -1.

Input: nums = [7,1,5,4]
Output: 4
Explanation:
The maximum difference occurs with i = 1 and j = 2, nums[j] - nums[i] = 5 - 1 = 4.
Note that with i = 1 and j = 0, the difference nums[j] - nums[i] = 7 - 1 = 6, but i > j, so it is not valid.

//code

//by the buy and sell stock

//or by this code

//code

class Solution {
    public int maximumDifference(int[] nums) {
        int min=nums[0];
        int diff=-1;
        for(int i=0;i<nums.length;i++){
            if(nums[i]>min){
                diff=Math.max(diff,nums[i]-min);
            }else{
                min=nums[i];
            }
        }

        return diff;
    }
}
