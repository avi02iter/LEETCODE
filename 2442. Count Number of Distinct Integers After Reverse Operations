class Solution {
    public int countDistinctIntegers(int[] nums) {
        HashSet<Integer> set=new HashSet<>();
        //  int count=0;
        //  int n=nums.length;
        //  int[] arr=new int[2*n];
        //  for(int i=0;i<n;i++){
        //      arr[i]=nums[i];
        //  }
        //  for(int i=n,j=0;i<2*n;i++){
        //      arr[i]=reverse(nums[j]);
        //      j++;
        //  }
        // for(int i=0;i<arr.length;i++){
        //     if(!set.contains(arr[i])){
        //         count++;
        //     }
        //         set.add(arr[i]);
            
        // }
for(int i=0;i<nums.length;i++){
    set.add(nums[i]);
    set.add(reverse(nums[i]));
}

return set.size();

    }

    public int reverse(int nums){
       if(nums>=0&&nums<=9){
              return nums;
       }
       int remain=0;
       while(nums!=0){
           int d=nums%10;
         remain=remain*10+d;
           nums/=10;
       }
       

       return remain;
    }
}
